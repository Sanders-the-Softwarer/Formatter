        -- Выражение слишком длинное для того, чтобы форматироваться в одну строку
        function get_quantity_by_data_source
            (
                p_mnemocode in varchar2
            )
            return t_calc_quantity_tbl
        is
            v_result t_calc_quantity_tbl;
        begin
            v_result := case when p_mnemocode = top_const.data_source_po then get_quantity_po(p_manual_data_source_code) when p_mnemocode = top_const.data_source_specification then get_quantity_spec(p_manual_data_source_code) when p_mnemocode in (top_const.data_source_1fs, top_const.data_source_2fs, top_const.data_source_order) then get_quantity_request(p_manual_data_source_code) when p_mnemocode = top_const.data_source_init_fcst then get_quantity_initial_forecast(p_manual_data_source_code) else t_calc_quantity_tbl() end;
            return v_result;
        end;


                select
                    t.dev_style_color_coll_code,
                    t.delivery_country_code,
                    case when sum(t.quantity_total) = 0 then avg(t.lc_net_main_currency * nullif(t.is_priority, 0)) else sum(t.lc_net_main_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                               lc_net_main_currency,
                    case when sum(t.quantity_total) = 0 then avg(nullif(t.lc_net_alt_currency * t.is_priority, 0)) else sum(t.lc_net_alt_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 lc_net_alt_currency,
                    case when sum(t.quantity_total) = 0 then sum(t.rrp_net * t.is_priority) / nullif(sum(t.lc_net_main_currency * t.is_priority), 0) else sum(t.rrp_net * t.quantity_total) / nullif(sum(t.lc_net_main_currency * t.quantity_total), 0) end                                                                                                                                                                                                                                                                                                                                                                                                                       planned_mup,
                    case when sum(t.quantity_total) = 0 then avg(nullif(t.pp_net_main_currency * t.is_priority, 0)) else sum(t.pp_net_main_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                               pp_net_main_currency,
                    case when sum(t.quantity_total) = 0 then avg(nullif(t.pp_net_alt_currency * t.is_priority, 0)) else sum(t.pp_net_alt_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 pp_net_alt_currency,
                    case when sum(t.quantity_total) = 0 then avg(t.custom_cost_main_currency * nullif(t.is_priority, 0)) else sum(t.custom_cost_main_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                     custom_cost_main_currency,
                    case when sum(t.quantity_total) = 0 then avg(t.custom_cost_alt_currency * nullif(t.is_priority, 0)) else sum(t.custom_cost_alt_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                       custom_cost_alt_currency,
                    case when sum(t.quantity_total) = 0 then avg(t.royalty_cost_main_currency * nullif(t.is_priority, 0)) else sum(t.royalty_cost_main_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                   royalty_cost_main_currency,
                    case when sum(t.quantity_total) = 0 then avg(t.royalty_cost_alt_currency * nullif(t.is_priority, 0)) else sum(t.royalty_cost_alt_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                     royalty_cost_alt_currency,
                    case when sum(t.quantity_total) = 0 then avg(t.delivery_cost_main_currency * nullif(t.is_priority, 0)) else sum(t.delivery_cost_main_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                 delivery_cost_main_currency,
                    case when sum(t.quantity_total) = 0 then avg(t.delivery_cost_alt_currency * nullif(t.is_priority, 0)) else sum(t.delivery_cost_alt_currency * t.quantity_total) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                   delivery_cost_alt_currency,
                    sum(t.quantity_totalquantity_total,
                    sum(t.quantity_on_holdquantity_on_hold,
                    sum(t.quantity_retail)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        quantity_retail,
                    sum(t.quantity_wholesalequantity_wholesale,
                    max(t.vat_ratevat_rate,
                    decode(count(distinct t.vat_rateis_different_vat,
                    case when nvl(sum(t.quantity_total), 0) = 0 then avg(nullif(t.vat_cost_main_currency * t.is_priority, 0)) else sum(t.quantity_total * t.vat_cost_main_currency) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                   vat_cost_main_currency,
                    case when nvl(sum(t.quantity_total), 0) = 0 then avg(nullif(t.vat_cost_alt_currency * t.is_priority, 0)) else sum(t.quantity_total * t.vat_cost_alt_currency) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                     vat_cost_alt_currency,
                    case when sum(t.quantity_total) = 0 then avg(t.rrp_net) else sum(t.rrp_net * t.quantity_total) / sum(t.quantity_total) endrrp_net,
                    max(case when t.is_priority = 1 then t.hs_code end) keep (dense_rank first order by quantity_total deschs_code,
                    case when /*Если Сумма (Quantity total (T.2.3)) <> 0, то*/ sum(t.quantity_total) <> 0 then case when /*Calculation_custom_base = 2, если хотя бы для одной строки Т.2.3, где Quantity total (T.2.3), верное что Calculation_custom_base (т.2.3) = 2;*/ sum(case when t.quantity_total <> 0 and t.calculate_custom_base = 2 then 1 else 0 end) > 0 then 2 when /*Calculation_custom_base = 0, если для всех строк Т.2.3, где Quantity total (T.2.3), верное что Calculation_custom_base (т.2.3) = 0;*/ sum(case when t.quantity_total <> 0 and t.calculate_custom_base = 0 then 1 else 0 end) =
                    sum(case when t.quantity_total <> 0 then 1 else 0 end) then 0 else /*Иначе Calculation_custom_base = 1*/ 1 end when /*Если Сумма (Quantity total (T.2.3)) = 0, то:*/ sum(t.quantity_total) = 0 then case when /*Calculation_custom_base = 2, если хотя бы для одной строки Т.2.3, верно что Calculation_custom_base (т.2.3) = 2;*/ sum(case when t.calculate_custom_base = 2 then 1 else 0 end) > 0 then 2 when /*Calculation_custom_base = 0, если для всех строк Т.2.3 верно что Calculation_custom_base (т.2.3) = 0;*/ sum(case when t.calculate_custom_base = 0 then 1 else 0 end) = count(*) then 0 else /*Иначе Calculation_custom_base = 1*/ 1 end end calculate_customs,
                    case when /*Если Сумма (Quantity total (T.2.3)) <> 0, то
                                 Если по всем строкам, где (Quantity total (T.2.3)) <> 0 ,
                                 Calculation_custom_manual = Null, то выставляем значение
                                 Calculation_custom_manual в ручных параметрах расчета как Null*/ sum(t.quantity_total) <> 0
                    and sum(case when t.quantity_total <> 0 and t.calculate_custom_manual is null then 1 else 0 end) =
                    sum(case when t.quantity_total <> 0 then 1 else 0 end) then null else /* иначе Calculation_custom_manual = MAX(Calculation_custom_manual (T.2.3))*/ max(t.calculate_custom_manual) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                        calc_custom_manual,
                    case when nvl(sum(t.quantity_total), 0) = 0 then avg(t.other_cost_main_currency * nullif(t.is_priority, 0)) else sum(t.quantity_total * t.other_cost_main_currency) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                               other_cost_main_currency,
                    case when nvl(sum(t.quantity_total), 0) = 0 then avg(t.other_cost_alt_currency * nullif(t.is_priority, 0)) else sum(t.quantity_total * t.other_cost_alt_currency) / sum(t.quantity_total) end                                                                                                                                                                                                                                                                                                                                                                                                                                                                 other_cost_alt_currency
                from
                    top_lc_calc_gtt t
                group by
                    t.dev_style_color_coll_code,
                    t.delivery_country_code
                    sum(quantity_retail)                                                                                                                                                                                            quantity_retail,
                    sum(quantity_wholesale)                                                                                                                                                                                         quantity_wholesale,
                    sum(quantity_on_hold)                                                                                                                                                                                           quantity_on_hold,
                    case when sum(t.quantity_total) = 0 then avg(t.purchase_price) else sum(t.purchase_price * t.quantity_total) / sum(t.quantity_total) end                                                                        purchase_price,
                    max(purchase_price_currency_code)                                                                                                                                                                               purchase_price_currency_code,
                    decode(count(distinct t.purchase_price_vat_type), 1, max(t.purchase_price_vat_type), 3)                                                                                                                         purchase_price_vat_type,
                    sysdate                                                                                                                                                                                                         calculation_date,
                    max(t.is_priority_manual)                                                                                                                                                                                       is_priority_manual,
                    max(t.is_priority_base)                                                                                                                                                                                         is_priority_base,
                    case when nvl(sum(t.quantity_total), 0) = 0 then avg(t.vat_cost_main_currency) else sum(t.quantity_total * t.vat_cost_main_currency) / sum(t.quantity_total) end                                                vat_cost_main_currency,
                    case when nvl(sum(t.quantity_total), 0) = 0 then avg(t.vat_cost_alt_currency) else sum(t.quantity_total * t.vat_cost_alt_currency) / sum(t.quantity_total) end                                                  vat_cost_alt_currency,
                    case when nvl(sum(t.quantity_total), 0) = 0 then max(t.calculate_custom_base) else max(t.calculate_custom_base) keep (dense_rank last order by t.quantity_total nulls first) end                                calculate_customs,
                    case when nvl(sum(t.quantity_total), 0) = 0 then avg(t.other_cost_main_currency) else sum(t.quantity_total * t.other_cost_main_currency) / sum(t.quantity_total) end                                            other_cost_main_currency,
                    case when nvl(sum(t.quantity_total), 0) = 0 then avg(t.other_cost_alt_currency) else sum(t.quantity_total * t.other_cost_alt_currency) / sum(t.quantity_total) end                                              other_cost_alt_currency
